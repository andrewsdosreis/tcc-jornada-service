plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.sonarqube" version "3.3"
	id 'jacoco'
	id 'java'
}

group = 'br.com.lutadeclasses'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.3")
}

dependencies {
	implementation 'com.github.java-json-tools:json-patch:1.12'
	implementation 'io.springfox:springfox-swagger2:2.8.0'
	implementation 'io.springfox:springfox-swagger-ui:2.8.0'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.apache.commons:commons-lang3:3.9'
	implementation 'org.apache.commons:commons-collections4:4.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	runtimeOnly 'mysql:mysql-connector-java'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	jacoco {
        destinationFile = layout.buildDirectory.file('jacoco/jacocoTest.exec').get().asFile
        classDumpDir = layout.buildDirectory.dir('jacoco/classpathdumps').get().asFile
    }	
}

jacocoTestReport {
    dependsOn test
	
	reports {
			xml.required = true
			csv.required = false
			html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
		}
    
	afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/lutadeclasses/jornadaservice/config/*',
							  '**/lutadeclasses/jornadaservice/controller/*',
							  '**/lutadeclasses/jornadaservice/converter/*',
                              '**/lutadeclasses/jornadaservice/entity/*',
                              '**/lutadeclasses/jornadaservice/model/*',
							  '**/lutadeclasses/jornadaservice/exception/handler/*',
							  '**/lutadeclasses/jornadaservice/JornadaServiceApplication.class'
							 ])
        }))
    }
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

sonarqube {
  properties {
    property "sonar.projectKey", "andrewsdosreis_tcc-jornada-service"
    property "sonar.organization", "andrewsdosreis"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}